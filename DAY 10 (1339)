MAXIMUM PRODUCT OF SPLITTED BINARY TREE
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxProduct(self, root: Optional[TreeNode]) -> int:
        def totalsum(root):
            if not root:
                return 0
            return totalsum(root.left) + totalsum(root.right) + root.val
                
        s = totalsum(root)
        self.output = 0
        def productmax(root):
            if not root:
                return 0
            l = productmax(root.left)
            r = productmax(root.right)
            self.output = max(self.output, (s-l)*l, (s-r)*r)
            return root.val + l + r
        productmax(root)
        return self.output%(10**9+7)
