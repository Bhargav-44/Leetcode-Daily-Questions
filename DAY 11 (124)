BINARY TREE MAXIMUM PATH SUM
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def maxPathSum(self, root: Optional[TreeNode]) -> int:
        res = [root.val]

        def dfs(root):
            if not root:
                return 0
            lefMax = dfs(root.left)
            rigMax = dfs(root.right)
            lefMax = max(lefMax, 0)
            rigMax = max(rigMax, 0)
            res[0] = max(res[0], root.val+lefMax+rigMax)
            return root.val + max(lefMax,rigMax)

        dfs(root)
        return res[0]
        
